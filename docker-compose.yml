version: '3.8'

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    ports:
      - "5432:5432"
    command: postgres -c shared_buffers=256MB -c max_connections=200
    shm_size: '256mb'

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3001:3001"
    environment:
      RAILS_ENV: production
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      RAILS_MAX_THREADS: 5
      WEB_CONCURRENCY: 2
      MALLOC_ARENA_MAX: 2
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    volumes:
      - gem_cache:/usr/local/bundle
      - ./log:/rails/log
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep '[p]uma' && curl -f http://localhost:3001/up || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
    name: finance_tracker_postgres_data
  gem_cache:
    name: finance_tracker_gem_cache